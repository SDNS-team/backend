# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Friend {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  deleted: Boolean!
  name: String!
  birthday: DateTime!
  description: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FriendResponse {
  values: [Friend!]
}

type Query {
  friends(where: FriendWhereInput, orderBy: [FriendOrderByWithRelationInput!], cursor: FriendWhereUniqueInput, take: Int, skip: Int, distinct: [FriendScalarFieldEnum!]): FriendResponse!
}

input FriendWhereInput {
  AND: [FriendWhereInput!]
  OR: [FriendWhereInput!]
  NOT: [FriendWhereInput!]
  id: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deleted: BoolFilter
  name: StringFilter
  birthday: DateTimeFilter
  description: StringNullableFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input FriendOrderByWithRelationInput {
  id: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deleted: SortOrder
  name: SortOrder
  birthday: SortOrder
  description: SortOrder
}

enum SortOrder {
  asc
  desc
}

input FriendWhereUniqueInput {
  id: String
}

enum FriendScalarFieldEnum {
  id
  createdAt
  updatedAt
  deleted
  name
  birthday
  description
}
